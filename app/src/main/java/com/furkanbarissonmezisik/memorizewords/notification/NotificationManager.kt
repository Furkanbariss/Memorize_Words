package com.furkanbarissonmezisik.memorizewords.notification

import android.app.AlarmManager
import android.app.NotificationChannel
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.BroadcastReceiver
import android.content.Context
import android.content.Intent
import android.os.Build
import androidx.core.app.NotificationCompat
import androidx.core.app.NotificationManagerCompat
import com.furkanbarissonmezisik.memorizewords.MainActivity
import com.furkanbarissonmezisik.memorizewords.R
import com.furkanbarissonmezisik.memorizewords.ui.theme.AppLanguage
import java.util.*

class NotificationManager(private val context: Context) {
    
    companion object {
        const val CHANNEL_ID = "daily_reminder_channel"
        const val NOTIFICATION_ID = 1001
        const val REQUEST_CODE = 2001
        
        // Fun emojis for notifications
        private val notificationEmojis = listOf(
            "ЁЯУЪ", "ЁЯОп", "ЁЯТк", "ЁЯФе", "ЁЯУЦ", "ЁЯУЭ", "ЁЯМЯ", "ЁЯза", "ЁЯЪА", "тнР",
            "ЁЯОУ", "ЁЯТб", "ЁЯОЙ", "ЁЯПЖ", "ЁЯОК", "ЁЯТО", "ЁЯМИ", "ЁЯОи", "ЁЯО╡", "ЁЯОк",
            "ЁЯОн", "ЁЯОк", "ЁЯОи", "ЁЯОм", "ЁЯОо", "ЁЯО▓", "ЁЯОп", "ЁЯОк", "ЁЯОи", "ЁЯО╡",
            "ЁЯНА", "ЁЯМ║", "ЁЯМ╗", "ЁЯМ╖", "ЁЯМ╕", "ЁЯМ╝", "ЁЯМ╣", "ЁЯМ┐", "ЁЯНГ", "ЁЯМ▒",
            "тЪб", "тЬи", "ЁЯТл", "ЁЯМЯ", "тнР", "ЁЯМЩ", "тШАя╕П", "ЁЯМЮ", "ЁЯМЭ", "ЁЯМЫ"
        )
        
        // Random notification icons
        private val notificationIcons = listOf(
            R.drawable.ic_notification_book,
            R.drawable.ic_notification_brain,
            R.drawable.ic_notification_star,
            R.drawable.ic_notification_rocket,
            R.drawable.ic_notification_lightbulb
        )
        
        // Notification messages in different languages (without emojis)
        private val notificationMessages = mapOf(
            AppLanguage.ENGLISH to listOf(
                "Don't forget to memorize your words today!",
                "Time for your daily vocabulary practice!",
                "Your words are waiting for you!",
                "Keep your learning streak alive!",
                "Ready to expand your vocabulary?",
                "Today's words are calling your name!",
                "Let's make today a learning day!",
                "Your brain will thank you for this!",
                "Small steps, big progress!",
                "Consistency is the key to success!"
            ),
            AppLanguage.TURKISH to listOf(
                "Bug├╝nk├╝ kelimelerini ezberlemeyi unutma!",
                "G├╝nl├╝k kelime prati─Яi zaman─▒!",
                "Kelimelerin seni bekliyor!",
                "├Ц─Яrenme serini canl─▒ tut!",
                "Kelime da─Яarc─▒─Я─▒n─▒ geni┼Яletmeye haz─▒r m─▒s─▒n?",
                "Bug├╝nk├╝ kelimeler seni ├зa─Я─▒r─▒yor!",
                "Bug├╝n├╝ ├╢─Яrenme g├╝n├╝ yapal─▒m!",
                "Beynin bunun i├зin sana te┼Яekk├╝r edecek!",
                "K├╝├з├╝k ad─▒mlar, b├╝y├╝k ilerleme!",
                "Tutarl─▒l─▒k ba┼Яar─▒n─▒n anahtar─▒!"
            ),
            AppLanguage.INDONESIAN to listOf(
                "Jangan lupa menghafal kata-kata hari ini!",
                "Waktunya latihan kosakata harian!",
                "Kata-katamu menunggumu!",
                "Jaga streak belajarmu tetap hidup!",
                "Siap memperluas kosakatamu?",
                "Kata-kata hari ini memanggil namamu!",
                "Mari jadikan hari ini hari belajar!",
                "Otakmu akan berterima kasih untuk ini!",
                "Langkah kecil, kemajuan besar!",
                "Konsistensi adalah kunci kesuksesan!"
            ),
            AppLanguage.CHINESE to listOf(
                "хИлх┐Шф║Жф╗КхдйшГМхНХшпНя╝Б",
                "цпПцЧешпНц▒Зч╗Гф╣ацЧ╢щЧ┤хИ░ф║Жя╝Б",
                "ф╜ачЪДхНХшпНхЬичнЙф╜ая╝Б",
                "ф┐ЭцМБхнжф╣аш┐ЮшГЬя╝Б",
                "хЗЖхдЗхе╜цЙйх▒ХшпНц▒ЗщЗПф║ЖхРЧя╝Я",
                "ф╗КхдйчЪДхНХшпНхЬихС╝хФдф╜ая╝Б",
                "шойцИСф╗мцККф╗КхдйхПШцИРхнжф╣ацЧея╝Б",
                "ф╜ачЪДхдзшДСф╝Ъф╕║цндцДЯш░вф╜ая╝Б",
                "х░Пцнещкдя╝Мхдзш┐Ыцнея╝Б",
                "хЭЪцМБцШпцИРхКЯчЪДхЕ│щФоя╝Б"
            ),
            AppLanguage.SPANISH to listOf(
                "┬бNo olvides memorizar tus palabras de hoy!",
                "┬бHora de tu pr├бctica diaria de vocabulario!",
                "┬бTus palabras te est├бn esperando!",
                "┬бMant├йn viva tu racha de aprendizaje!",
                "┬┐Listo para expandir tu vocabulario?",
                "┬бLas palabras de hoy te est├бn llamando!",
                "┬бHagamos de hoy un d├нa de aprendizaje!",
                "┬бTu cerebro te lo agradecer├б!",
                "┬бPasos peque├▒os, gran progreso!",
                "┬бLa consistencia es la clave del ├йxito!"
            ),
            AppLanguage.ARABIC to listOf(
                "┘Д╪з ╪к┘Ж╪│ ╪н┘Б╪╕ ┘Г┘Д┘Е╪з╪к┘Г ╪з┘Д┘К┘И┘Е!",
                "╪н╪з┘Ж ┘И┘В╪к ┘Е┘Е╪з╪▒╪│╪й ╪з┘Д┘Е┘Б╪▒╪п╪з╪к ╪з┘Д┘К┘И┘Е┘К╪й!",
                "┘Г┘Д┘Е╪з╪к┘Г ┘Б┘К ╪з┘Ж╪к╪╕╪з╪▒┘Г!",
                "╪н╪з┘Б╪╕ ╪╣┘Д┘Й ╪│┘Д╪│┘Д╪й ╪з┘Д╪к╪╣┘Д┘Е ╪н┘К╪й!",
                "┘Е╪│╪к╪╣╪п ┘Д╪к┘И╪│┘К╪╣ ┘Е┘Б╪▒╪п╪з╪к┘Г╪Я",
                "┘Г┘Д┘Е╪з╪к ╪з┘Д┘К┘И┘Е ╪к┘Ж╪з╪п┘К┘Г!",
                "┘Д┘Ж╪м╪╣┘Д ╪з┘Д┘К┘И┘Е ┘К┘И┘Е ╪к╪╣┘Д┘Е!",
                "╪п┘Е╪з╪║┘Г ╪│┘К╪┤┘Г╪▒┘Г ╪╣┘Д┘Й ┘З╪░╪з!",
                "╪о╪╖┘И╪з╪к ╪╡╪║┘К╪▒╪й╪М ╪к┘В╪п┘Е ┘Г╪и┘К╪▒!",
                "╪з┘Д╪л╪и╪з╪к ┘З┘И ┘Е┘Б╪к╪з╪н ╪з┘Д┘Ж╪м╪з╪н!"
            ),
            AppLanguage.HINDI to listOf(
                "рдЖрдЬ рдЕрдкрдиреЗ рд╢рдмреНрджреЛрдВ рдХреЛ рдпрд╛рдж рдХрд░рдирд╛ рдордд рднреВрд▓реЗрдВ!",
                "рджреИрдирд┐рдХ рд╢рдмреНрджрд╛рд╡рд▓реА рдЕрднреНрдпрд╛рд╕ рдХрд╛ рд╕рдордп!",
                "рдЖрдкрдХреЗ рд╢рдмреНрдж рдЖрдкрдХрд╛ рдЗрдВрддрдЬрд╛рд░ рдХрд░ рд░рд╣реЗ рд╣реИрдВ!",
                "рдЕрдкрдиреА рд╕реАрдЦрдиреЗ рдХреА рд▓рдХреАрд░ рдХреЛ рдЬреАрд╡рд┐рдд рд░рдЦреЗрдВ!",
                "рдЕрдкрдиреА рд╢рдмреНрджрд╛рд╡рд▓реА рдмрдврд╝рд╛рдиреЗ рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рд╣реИрдВ?",
                "рдЖрдЬ рдХреЗ рд╢рдмреНрдж рдЖрдкрдХреЛ рдмреБрд▓рд╛ рд░рд╣реЗ рд╣реИрдВ!",
                "рдЖрдЬ рдХреЛ рд╕реАрдЦрдиреЗ рдХрд╛ рджрд┐рди рдмрдирд╛рддреЗ рд╣реИрдВ!",
                "рдЖрдкрдХрд╛ рджрд┐рдорд╛рдЧ рдЗрд╕рдХреЗ рд▓рд┐рдП рдЖрдкрдХреЛ рдзрдиреНрдпрд╡рд╛рдж рджреЗрдЧрд╛!",
                "рдЫреЛрдЯреЗ рдХрджрдо, рдмрдбрд╝реА рдкреНрд░рдЧрддрд┐!",
                "рдирд┐рд░рдВрддрд░рддрд╛ рд╕рдлрд▓рддрд╛ рдХреА рдХреБрдВрдЬреА рд╣реИ!"
            ),
            AppLanguage.PORTUGUESE to listOf(
                "N├гo esque├зa de memorizar suas palavras hoje!",
                "Hora da sua pr├бtica di├бria de vocabul├бrio!",
                "Suas palavras est├гo esperando por voc├к!",
                "Mantenha sua sequ├кncia de aprendizado viva!",
                "Pronto para expandir seu vocabul├бrio?",
                "As palavras de hoje est├гo chamando seu nome!",
                "Vamos fazer de hoje um dia de aprendizado!",
                "Seu c├йrebro vai te agradecer por isso!",
                "Pequenos passos, grande progresso!",
                "Consist├кncia ├й a chave do sucesso!"
            ),
            AppLanguage.FRENCH to listOf(
                "N'oubliez pas de m├йmoriser vos mots aujourd'hui!",
                "C'est l'heure de votre pratique quotidienne de vocabulaire!",
                "Vos mots vous attendent!",
                "Gardez votre s├йrie d'apprentissage vivante!",
                "Pr├кt ├а ├йlargir votre vocabulaire?",
                "Les mots d'aujourd'hui vous appellent!",
                "Faisons d'aujourd'hui un jour d'apprentissage!",
                "Votre cerveau vous remerciera pour cela!",
                "Petits pas, grand progr├иs!",
                "La constance est la cl├й du succ├иs!"
            ),
            AppLanguage.RUSSIAN to listOf(
                "╨Э╨╡ ╨╖╨░╨▒╤Г╨┤╤М╤В╨╡ ╨▓╤Л╤Г╤З╨╕╤В╤М ╤Б╨╡╨│╨╛╨┤╨╜╤П╤И╨╜╨╕╨╡ ╤Б╨╗╨╛╨▓╨░!",
                "╨Т╤А╨╡╨╝╤П ╨┤╨╗╤П ╨╡╨╢╨╡╨┤╨╜╨╡╨▓╨╜╨╛╨╣ ╨┐╤А╨░╨║╤В╨╕╨║╨╕ ╤Б╨╗╨╛╨▓╨░╤А╤П!",
                "╨Т╨░╤И╨╕ ╤Б╨╗╨╛╨▓╨░ ╨╢╨┤╤Г╤В ╨▓╨░╤Б!",
                "╨Я╨╛╨┤╨┤╨╡╤А╨╢╨╕╨▓╨░╨╣╤В╨╡ ╤Б╨▓╨╛╤О ╤Б╨╡╤А╨╕╤О ╨╛╨▒╤Г╤З╨╡╨╜╨╕╤П!",
                "╨У╨╛╤В╨╛╨▓╤Л ╤А╨░╤Б╤И╨╕╤А╨╕╤В╤М ╤Б╨▓╨╛╨╣ ╤Б╨╗╨╛╨▓╨░╤А╨╜╤Л╨╣ ╨╖╨░╨┐╨░╤Б?",
                "╨б╨╡╨│╨╛╨┤╨╜╤П╤И╨╜╨╕╨╡ ╤Б╨╗╨╛╨▓╨░ ╨╖╨╛╨▓╤Г╤В ╨▓╨░╤Б!",
                "╨Ф╨░╨▓╨░╨╣╤В╨╡ ╤Б╨┤╨╡╨╗╨░╨╡╨╝ ╤Б╨╡╨│╨╛╨┤╨╜╤П ╨┤╨╜╨╡╨╝ ╨╛╨▒╤Г╤З╨╡╨╜╨╕╤П!",
                "╨Т╨░╤И ╨╝╨╛╨╖╨│ ╨┐╨╛╨▒╨╗╨░╨│╨╛╨┤╨░╤А╨╕╤В ╨▓╨░╤Б ╨╖╨░ ╤Н╤В╨╛!",
                "╨Ь╨░╨╗╨╡╨╜╤М╨║╨╕╨╡ ╤И╨░╨│╨╕, ╨▒╨╛╨╗╤М╤И╨╛╨╣ ╨┐╤А╨╛╨│╤А╨╡╤Б╤Б!",
                "╨Я╨╛╤Б╤В╨╛╤П╨╜╤Б╤В╨▓╨╛ - ╨║╨╗╤О╤З ╨║ ╤Г╤Б╨┐╨╡╤Е╤Г!"
            ),
            AppLanguage.BENGALI to listOf(
                "ржЖржЬ ржЖржкржирж╛рж░ рж╢ржмрзНржжржЧрзБрж▓рж┐ ржорзБржЦрж╕рзНрже ржХрж░рждрзЗ ржнрзБрж▓ржмрзЗржи ржирж╛!",
                "ржжрзИржирж┐ржХ рж╢ржмрзНржжржнрж╛ржирзНржбрж╛рж░ ржЕржирзБрж╢рзАрж▓ржирзЗрж░ рж╕ржоржпрж╝!",
                "ржЖржкржирж╛рж░ рж╢ржмрзНржжржЧрзБрж▓рж┐ ржЖржкржирж╛рж░ ржЬржирзНржп ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░ржЫрзЗ!",
                "ржЖржкржирж╛рж░ рж╢рзЗржЦрж╛рж░ рж╕рзНржЯрзНрж░рж┐ржХ ржЬрзАржмрж┐ржд рж░рж╛ржЦрзБржи!",
                "ржЖржкржирж╛рж░ рж╢ржмрзНржжржнрж╛ржирзНржбрж╛рж░ ржкрзНрж░рж╕рж╛рж░рж┐ржд ржХрж░рждрзЗ ржкрзНрж░рж╕рзНрждрзБржд?",
                "ржЖржЬржХрзЗрж░ рж╢ржмрзНржжржЧрзБрж▓рж┐ ржЖржкржирж╛ржХрзЗ ржбрж╛ржХржЫрзЗ!",
                "ржЖржЬржХрзЗ рж╢рзЗржЦрж╛рж░ ржжрж┐ржи ржХрж░рж┐!",
                "ржЖржкржирж╛рж░ ржорж╕рзНрждрж┐рж╖рзНржХ ржПржЯрж┐рж░ ржЬржирзНржп ржЖржкржирж╛ржХрзЗ ржзржирзНржпржмрж╛ржж ржжрзЗржмрзЗ!",
                "ржЫрзЛржЯ ржкржжржХрзНрж╖рзЗржк, ржмржбрж╝ ржЕржЧрзНрж░ржЧрждрж┐!",
                "ржзрж╛рж░рж╛ржмрж╛рж╣рж┐ржХрждрж╛ рж╕рж╛ржлрж▓рзНржпрзЗрж░ ржЪрж╛ржмрж┐ржХрж╛ржарж┐!"
            )
        )
    }
    
    fun createNotificationChannel() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            val channel = NotificationChannel(
                CHANNEL_ID,
                "Daily Reminder",
                NotificationManager.IMPORTANCE_DEFAULT
            ).apply {
                description = "Daily reminders to practice vocabulary"
            }
            
            val notificationManager = context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager
            notificationManager.createNotificationChannel(channel)
        }
    }
    
    fun scheduleDailyNotification(hour: Int = 9, minute: Int = 0) {
        val alarmManager = context.getSystemService(Context.ALARM_SERVICE) as AlarmManager
        val intent = Intent(context, NotificationReceiver::class.java)
        val pendingIntent = PendingIntent.getBroadcast(
            context,
            REQUEST_CODE,
            intent,
            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
        )
        
        val calendar = Calendar.getInstance().apply {
            set(Calendar.HOUR_OF_DAY, hour)
            set(Calendar.MINUTE, minute)
            set(Calendar.SECOND, 0)
            set(Calendar.MILLISECOND, 0)
            
            // If the time has already passed today, schedule for tomorrow
            if (timeInMillis <= System.currentTimeMillis()) {
                add(Calendar.DAY_OF_MONTH, 1)
            }
        }
        
        // Cancel any existing alarm first
        alarmManager.cancel(pendingIntent)
        
        // Schedule the new alarm
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            alarmManager.setExactAndAllowWhileIdle(
                AlarmManager.RTC_WAKEUP,
                calendar.timeInMillis,
                pendingIntent
            )
        } else {
            alarmManager.setRepeating(
                AlarmManager.RTC_WAKEUP,
                calendar.timeInMillis,
                AlarmManager.INTERVAL_DAY,
                pendingIntent
            )
        }
    }
    
    fun cancelDailyNotification() {
        val alarmManager = context.getSystemService(Context.ALARM_SERVICE) as AlarmManager
        val intent = Intent(context, NotificationReceiver::class.java)
        val pendingIntent = PendingIntent.getBroadcast(
            context,
            REQUEST_CODE,
            intent,
            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
        )
        alarmManager.cancel(pendingIntent)
    }
    
    fun showNotification(language: AppLanguage) {
        val messages = notificationMessages[language] ?: notificationMessages[AppLanguage.ENGLISH]!!
        val randomMessage = messages.random()
        val randomEmoji = notificationEmojis.random()
        val randomIcon = notificationIcons.random()
        val messageWithEmoji = "$randomEmoji $randomMessage"
        
        val intent = Intent(context, MainActivity::class.java).apply {
            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
        }
        val pendingIntent = PendingIntent.getActivity(
            context,
            0,
            intent,
            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
        )
        
        val notification = NotificationCompat.Builder(context, CHANNEL_ID)
            .setSmallIcon(randomIcon)
            .setContentTitle(context.getString(R.string.app_name))
            .setContentText(messageWithEmoji)
            .setPriority(NotificationCompat.PRIORITY_DEFAULT)
            .setContentIntent(pendingIntent)
            .setAutoCancel(true)
            .build()
        
        with(NotificationManagerCompat.from(context)) {
            notify(NOTIFICATION_ID, notification)
        }
    }
    
    class NotificationReceiver : BroadcastReceiver() {
        override fun onReceive(context: Context, intent: Intent) {
            try {
                // Get the current language from SharedPreferences
                val prefs = context.getSharedPreferences("language_preferences", Context.MODE_PRIVATE)
                val storedLanguageCode = prefs.getString("app_language", AppLanguage.ENGLISH.code)
                val language = AppLanguage.values().find { it.code == storedLanguageCode } ?: AppLanguage.ENGLISH
                
                val notificationManager = NotificationManager(context)
                notificationManager.createNotificationChannel()
                notificationManager.showNotification(language)
                
                // Schedule the next notification
                val notificationSettings = NotificationSettingsManager(context)
                if (notificationSettings.isEnabled) {
                    notificationManager.scheduleDailyNotification(
                        notificationSettings.reminderHour,
                        notificationSettings.reminderMinute
                    )
                }
            } catch (e: Exception) {
                e.printStackTrace()
            }
        }
    }
}

